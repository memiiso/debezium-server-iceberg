# Use iceberg sink
debezium.sink.type=iceberg

# Iceberg sink config
debezium.sink.iceberg.table-prefix=tsdb
debezium.sink.iceberg.upsert=true
debezium.sink.iceberg.upsert-keep-deletes=true
debezium.sink.iceberg.write.format.default=parquet

# S3 config using Rest catalog and S3FileIO
aws.region=us-east-2
debezium.sink.aws.region=us-east-2
debezium.sink.iceberg.type=rest
debezium.sink.iceberg.catalog-name=iceberg
debezium.sink.iceberg.table-namespace=tsdb
debezium.sink.iceberg.io-impl=org.apache.iceberg.io.ResolvingFileIO
debezium.sink.iceberg.uri=https://s3tables.us-east-2.amazonaws.com/iceberg
debezium.sink.iceberg.warehouse=arn:aws:s3tables:us-east-2:142548018081:bucket/dodd-iceberg-integration-use2
debezium.sink.iceberg.s3.region=us-east-2
debezium.sink.iceberg.s3.path-style-access=true
# EXPERIMENTAL - not sure if this will work.
debezium.sink.iceberg.rest.sigv4-enabled=true
debezium.sink.iceberg.sigv4-enabled=true
debezium.sink.iceberg.rest.signing-name=s3tables
debezium.sink.iceberg.signing-name=s3tables
debezium.sink.iceberg.rest.signing-region=us-east-2
debezium.sink.iceberg.signing-region=us-east-2

# Postgres source
debezium.source.connector.class=io.debezium.connector.postgresql.PostgresConnector
debezium.source.offset.flush.interval.ms=0
debezium.source.database.hostname=tsdb
debezium.source.database.port=5432
debezium.source.database.user=postgres
debezium.source.database.password=postgres
debezium.source.database.dbname=postgres
debezium.source.database.server.name=tutorial
debezium.source.database.server.id=1234
debezium.source.topic.prefix=_
# Timescale config
debezium.source.schema.include.list=public,inventory,_timescaledb_internal
#debezium.source.schema.exclude.list=
debezium.source.table.include.list=_timescaledb_internal\._hyper_.+,public\..+,inventory\..+
#debezium.source.table.exclude.list=
#debezium.source.column.include.list=
#debezium.source.column.exclude.list=
debezium.source.transforms=timescaledb
debezium.source.transforms.timescaledb.type=io.debezium.connector.postgresql.transforms.timescaledb.TimescaleDb

# Save debezium state data to destination iceberg tables
# see https://debezium.io/documentation/reference/stable/development/engine.html#advanced-consuming
debezium.source.offset.storage=io.debezium.server.iceberg.offset.IcebergOffsetBackingStore
debezium.source.offset.storage.iceberg.table-name=debezium_offset_storage_table
# see https://debezium.io/documentation/reference/stable/development/engine.html#database-history-properties
debezium.source.schema.history.internal=io.debezium.server.iceberg.history.IcebergSchemaHistory
debezium.source.schema.history.internal.iceberg.table-name=debezium_database_history_storage_table

# Enable event schemas - mandatory
debezium.format.value.schemas.enable=true
debezium.format.key.schemas.enable=true
debezium.format.value=json
debezium.format.key=json

# Do event flattening. unwrap message!
debezium.transforms=unwrap
debezium.transforms.unwrap.type=io.debezium.transforms.ExtractNewRecordState
debezium.transforms.unwrap.add.fields=op,table,source.ts_ms,db
debezium.transforms.unwrap.delete.handling.mode=rewrite
debezium.transforms.unwrap.drop.tombstones=true

# ############ SET LOG LEVELS ############
quarkus.log.level=DEBUG
quarkus.log.console.json=false
